apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: ndd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: devicedrivers.driver.ndd.henderiw.be
spec:
  group: driver.ndd.henderiw.be
  names:
    kind: DeviceDriver
    listKind: DeviceDriverList
    plural: devicedrivers
    singular: devicedriver
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DeviceDriver is the Schema for the devicedrivers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeviceDriverSpec defines the desired state of DeviceDriver
            properties:
              foo:
                description: Foo is an example field of DeviceDriver. Edit devicedriver_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: DeviceDriverStatus defines the observed state of DeviceDriver
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: networknodes.driver.ndd.henderiw.be
spec:
  group: driver.ndd.henderiw.be
  names:
    kind: NetworkNode
    listKind: NetworkNodeList
    plural: networknodes
    singular: networknode
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NetworkNode is the Schema for the networknodes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkNodeSpec defines the desired state of NetworkNode
            properties:
              foo:
                description: Foo is an example field of NetworkNode. Edit networknode_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: NetworkNodeStatus defines the observed state of NetworkNode
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: providers.pkg.ndd.henderiw.be
spec:
  group: pkg.ndd.henderiw.be
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Provider is a crd for adding a provider to the Network Device
          Driver.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProviderSpec specifies details about a request to install
              a provider to the network device driver.
            properties:
              package:
                description: Package is the name of the package that is being requested.
                type: string
              packagePullPolicy:
                default: IfNotPresent
                description: PackagePullPolicy defines the pull policy for the package.
                  Default is IfNotPresent.
                type: string
              packagePullSecrets:
                description: PackagePullSecrets are named secrets in the same namespace
                  that can be used to fetch packages from private registries.
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
            required:
            - package
            type: object
          status:
            description: ProviderStatus defines the observed state of Provider
            properties:
              currentIdentifier:
                description: CurrentIdentifier is the most recent package source that
                  was used to produce a revision. The package manager uses this field
                  to determine whether to check for package updates for a given source
                  when packagePullPolicy is set to IfNotPresent. Manually removing
                  this field will cause the package manager to check that the current
                  revision is correct for the given package source.
                type: string
              currentRevision:
                description: CurrentRevision is the name of the current package revision.
                  It will reflect the most up to date revision, whether it has been
                  activated or not.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ndd-controller-manager
  namespace: ndd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ndd-leader-election-role
  namespace: ndd-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ndd-manager-role
rules:
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - devicedrivers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - devicedrivers/finalizers
  verbs:
  - update
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - devicedrivers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - networknodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - networknodes/finalizers
  verbs:
  - update
- apiGroups:
  - driver.ndd.henderiw.be
  resources:
  - networknodes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - pkg.ndd.henderiw.be
  resources:
  - providers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pkg.ndd.henderiw.be
  resources:
  - providers/finalizers
  verbs:
  - update
- apiGroups:
  - pkg.ndd.henderiw.be
  resources:
  - providers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ndd-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ndd-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ndd-leader-election-rolebinding
  namespace: ndd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ndd-leader-election-role
subjects:
- kind: ServiceAccount
  name: ndd
  namespace: ndd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ndd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ndd-manager-role
subjects:
- kind: ServiceAccount
  name: ndd
  namespace: ndd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ndd-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ndd-proxy-role
subjects:
- kind: ServiceAccount
  name: ndd-controller-manager
  namespace: ndd-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: c66ce353.ndd.henderiw.be
kind: ConfigMap
metadata:
  name: ndd-manager-config
  namespace: ndd-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: ndd-controller-manager-metrics-service
  namespace: ndd-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: ndd-controller-manager
  namespace: ndd-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - start
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - -- debug
        command:
        - /ndd
        image: henderiw/nddcore:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: ndd-controller-manager
      terminationGracePeriodSeconds: 10
